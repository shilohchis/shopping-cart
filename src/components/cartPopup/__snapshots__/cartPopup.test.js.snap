// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CartPopup component should rener cpomponent 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <cartPopup />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        undefined,
        <ForwardRef(Bootstrap(Row))
          style={
            Object {
              "padding": "4%",
            }
          }
        >
          <ForwardRef(Bootstrap(Col))
            md={6}
          >
            TOTAL
          </ForwardRef(Bootstrap(Col))>
          <ForwardRef(Bootstrap(Col))
            md={6}
            style={
              Object {
                "textAlign": "right",
              }
            }
          >
            $NaN
          </ForwardRef(Bootstrap(Col))>
          <ForwardRef(Bootstrap(Col))
            md={6}
          >
            <ForwardRef
              type="view"
            >
              VIEW CART
            </ForwardRef>
          </ForwardRef(Bootstrap(Col))>
          <ForwardRef(Bootstrap(Col))
            md={6}
          >
            <ForwardRef
              type="checkout"
            >
              CHECKOUT
            </ForwardRef>
          </ForwardRef(Bootstrap(Col))>
        </ForwardRef(Bootstrap(Row))>,
      ],
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(Bootstrap(Col))
              md={6}
            >
              TOTAL
            </ForwardRef(Bootstrap(Col))>,
            <ForwardRef(Bootstrap(Col))
              md={6}
              style={
                Object {
                  "textAlign": "right",
                }
              }
            >
              $NaN
            </ForwardRef(Bootstrap(Col))>,
            <ForwardRef(Bootstrap(Col))
              md={6}
            >
              <ForwardRef
                type="view"
              >
                VIEW CART
              </ForwardRef>
            </ForwardRef(Bootstrap(Col))>,
            <ForwardRef(Bootstrap(Col))
              md={6}
            >
              <ForwardRef
                type="checkout"
              >
                CHECKOUT
              </ForwardRef>
            </ForwardRef(Bootstrap(Col))>,
          ],
          "style": Object {
            "padding": "4%",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "TOTAL",
              "md": 6,
            },
            "ref": null,
            "rendered": "TOTAL",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "$NaN",
              "md": 6,
              "style": Object {
                "textAlign": "right",
              },
            },
            "ref": null,
            "rendered": "$NaN",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                type="view"
              >
                VIEW CART
              </ForwardRef>,
              "md": 6,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "VIEW CART",
                "onClick": undefined,
                "type": "view",
              },
              "ref": null,
              "rendered": "VIEW CART",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  background-color: ",
                    [Function],
                    ";
  padding: 10px;
  font-weight: 500;
  margin: 5px;
  cursor: pointer;
  border: 1px solid;
  width: 100%;
",
                  ],
                },
                "displayName": "styled.button",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef
                type="checkout"
              >
                CHECKOUT
              </ForwardRef>,
              "md": 6,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "CHECKOUT",
                "type": "checkout",
              },
              "ref": null,
              "rendered": "CHECKOUT",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  background-color: ",
                    [Function],
                    ";
  padding: 10px;
  font-weight: 500;
  margin: 5px;
  cursor: pointer;
  border: 1px solid;
  width: 100%;
",
                  ],
                },
                "displayName": "styled.button",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          undefined,
          <ForwardRef(Bootstrap(Row))
            style={
              Object {
                "padding": "4%",
              }
            }
          >
            <ForwardRef(Bootstrap(Col))
              md={6}
            >
              TOTAL
            </ForwardRef(Bootstrap(Col))>
            <ForwardRef(Bootstrap(Col))
              md={6}
              style={
                Object {
                  "textAlign": "right",
                }
              }
            >
              $NaN
            </ForwardRef(Bootstrap(Col))>
            <ForwardRef(Bootstrap(Col))
              md={6}
            >
              <ForwardRef
                type="view"
              >
                VIEW CART
              </ForwardRef>
            </ForwardRef(Bootstrap(Col))>
            <ForwardRef(Bootstrap(Col))
              md={6}
            >
              <ForwardRef
                type="checkout"
              >
                CHECKOUT
              </ForwardRef>
            </ForwardRef(Bootstrap(Col))>
          </ForwardRef(Bootstrap(Row))>,
        ],
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef(Bootstrap(Col))
                md={6}
              >
                TOTAL
              </ForwardRef(Bootstrap(Col))>,
              <ForwardRef(Bootstrap(Col))
                md={6}
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
              >
                $NaN
              </ForwardRef(Bootstrap(Col))>,
              <ForwardRef(Bootstrap(Col))
                md={6}
              >
                <ForwardRef
                  type="view"
                >
                  VIEW CART
                </ForwardRef>
              </ForwardRef(Bootstrap(Col))>,
              <ForwardRef(Bootstrap(Col))
                md={6}
              >
                <ForwardRef
                  type="checkout"
                >
                  CHECKOUT
                </ForwardRef>
              </ForwardRef(Bootstrap(Col))>,
            ],
            "style": Object {
              "padding": "4%",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "TOTAL",
                "md": 6,
              },
              "ref": null,
              "rendered": "TOTAL",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "$NaN",
                "md": 6,
                "style": Object {
                  "textAlign": "right",
                },
              },
              "ref": null,
              "rendered": "$NaN",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  type="view"
                >
                  VIEW CART
                </ForwardRef>,
                "md": 6,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "VIEW CART",
                  "onClick": undefined,
                  "type": "view",
                },
                "ref": null,
                "rendered": "VIEW CART",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": false,
                    "rules": Array [
                      "
  color: ",
                      [Function],
                      ";
  background-color: ",
                      [Function],
                      ";
  padding: 10px;
  font-weight: 500;
  margin: 5px;
  cursor: pointer;
  border: 1px solid;
  width: 100%;
",
                    ],
                  },
                  "displayName": "styled.button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef
                  type="checkout"
                >
                  CHECKOUT
                </ForwardRef>,
                "md": 6,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "CHECKOUT",
                  "type": "checkout",
                },
                "ref": null,
                "rendered": "CHECKOUT",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": false,
                    "rules": Array [
                      "
  color: ",
                      [Function],
                      ";
  background-color: ",
                      [Function],
                      ";
  padding: 10px;
  font-weight: 500;
  margin: 5px;
  cursor: pointer;
  border: 1px solid;
  width: 100%;
",
                    ],
                  },
                  "displayName": "styled.button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
